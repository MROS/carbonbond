schema {
    query: Query
    mutation: Mutation
}

type Category {
    body: String!
}

type Board {
    id: ID!
    boardName: String!
    categories: [Category!]!
    title: String!
    rulingPartyId: ID!
}

type Article {
	id: ID!
    title: String!
    authorId: String!
    energy: Int!
    createTime: Int!
    rootId: ID!
    content: [String!]!
    category: Category!
	board: Board!
}

type Me {
    id: String
}

type Query {
    me: Me! @juniper(ownership: "owned")

    myPartyList(boardName: String): [Party!]! @juniper(ownership: "owned")
    party(partyName: String!): Party! @juniper(ownership: "owned")

    board(name: String!): Board! @juniper(ownership: "owned")
    boardList(ids: [ID!]): [Board!]! @juniper(ownership: "owned")

    article(id: ID!): Article! @juniper(ownership: "owned")
    articleList(
        boardName: String!
        offset: Int!
        pageSize: Int!
        showHidden: Boolean
    ): [Article!]! @juniper(ownership: "owned")
}

input Reply {
    articleId: ID!
    transfuse: Int!
}

type Mutation {
    login(id: String! password: String!): Boolean!
    logout: Boolean!
	createArticle(
		boardName: String!
		categoryName: String!
		title: String!
		content: [String!]!
		replyTo: [Reply!]!
	): ID! @juniper(ownership: "owned")
    createParty(partyName: String! boardName: String): ID! @juniper(ownership: "owned")
    createBoard(boardName: String! partyName: String!): ID! @juniper(ownership: "owned")
}